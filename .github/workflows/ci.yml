name: "ci"

on:
  push:
  pull_request:
    branches: main

jobs:
  ci:
    runs-on: ubuntu-latest
    # permissions:
    #  contents: write # Needed to update the coverage badge.

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
      with:
        # Needed to update coverage badge and to run goreleaser.
        fetch-depth: 0

    - name: Install Golang
      uses: actions/setup-go@v2
      with:
        go-version: '1.17'

    - name: Install dependencies
      run: |
        sudo apt-get install make

    - name: Set up project
      run: make setup

    - name: Lint project, core part
      uses: golangci/golangci-lint-action@v2
      with:
        working-directory: core
        version: latest
        skip-go-installation: true

    - name: Lint project, cli part
      uses: golangci/golangci-lint-action@v2
      with:
        working-directory: cli
        version: latest
        skip-go-installation: true

    - name: Set CLIVERSION env var on tag
      if: startsWith(github.ref, 'refs/tags/')
      run: echo "CLIVERSION=$(git describe --exact-match --tags | sed 's/^v//')" >> $GITHUB_ENV

    - name: Release binaries on tag
      uses: goreleaser/goreleaser-action@v2
      if: startsWith(github.ref, 'refs/tags/')
      with:
        args: release --rm-dist
        workdir: ./cli
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Test core module and generate test coverage
      working-directory: ./core/
      run: |
       make test
       make coverage_badge_report.out

    - name: Test CLI module and generate test coverage
      working-directory: ./cli/
      run: |
       make test
       make coverage_badge_report.out
    
    - name: Generate CLI module coverage badge
      uses: tj-actions/coverage-badge-go@v1
      with:
        filename: ./cli/coverage_badge_report.out
        text: CLI_Coverage
    
    - name: Generate core module coverage badge
      uses: tj-actions/coverage-badge-go@v1
      with:
        filename: ./core/coverage_badge_report.out
        text: Core_Coverage
    
    - name: Update readme in repo
      run: |
        git config --local user.email 'github-actions[bot]@users.noreply.github.com'
        git config --local user.name 'github-actions[bot]'
        # If any of the following commands fail, it means the readme did not
        # change. Ignore such errors.
        git add README.md &&
        git commit -m "Auto-update coverage badges [skip ci] [ci skip]" && 
        git push origin main || :
